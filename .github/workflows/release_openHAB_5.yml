name: Build OilFox Binding for openHAB 5

on:
  workflow_dispatch:
  push:
    branches:
      - "master"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        java: [ '21' ]
        maven: [ '3.9.10' ]
        addons-ref: [ '5' ]
        addons-branch: [ 'main' ]
        os: [ 'ubuntu-24.04' ]
    name: Build on ${{ matrix.addons-ref }} (Java ${{ matrix.java }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout openhab-addons
        uses: actions/checkout@v4
        with:
          repository: openhab/openhab-addons
          path: openhab-addons
          ref: ${{ matrix.addons-branch }}

      - name: Checkout oilFox Binding
        uses: actions/checkout@v4
        with:
          path: openhab-addons/bundles/org.openhab.binding.oilfox

      - name: Set up Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/openhab
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Set up Maven ${{ matrix.maven }}
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: ${{ matrix.maven }}

      - name: Build with maven
        run: 'cd openhab-addons/bundles/org.openhab.binding.oilfox ; mvn clean install -DskipChecks'

      - name: set env
        run: echo "TAG=openHAB_${{ matrix.addons-ref }}_$(date +'%Y-%m-%d')" >> $GITHUB_ENV


      - name: Delete Release History
        run: |
          HISTORY="${{ env.TAG }}"
          OUTPUT=$(gh release delete "${HISTORY}" --cleanup-tag --yes 2>&1) || [[ "${OUTPUT}" == "release not found" ]]
        working-directory: openhab-addons/bundles/org.openhab.binding.oilfox
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Build Release History
        run: gh release create "${{ env.TAG }}" --title "Release ${{ env.TAG }}" --latest=false target/*.jar
        working-directory: openhab-addons/bundles/org.openhab.binding.oilfox
        env:
           GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: rename jar files
        run: | 
          mv openhab-addons/bundles/org.openhab.binding.oilfox/target/org.openhab.binding.oilfox-5*-SNAPSHOT.jar openhab-addons/bundles/org.openhab.binding.oilfox/target/org.openhab.binding.oilfox-5.0.0.jar
          mv openhab-addons/bundles/org.openhab.binding.oilfox/target/org.openhab.binding.oilfox-5*-SNAPSHOT-sources.jar openhab-addons/bundles/org.openhab.binding.oilfox/target/org.openhab.binding.oilfox-5.0.0-sources.jar


      - name: Delete latest Release
        run: |
          LATEST="latest_openHAB_${{ matrix.addons-ref }}"
          OUTPUT=$(gh release delete "${LATEST}" --cleanup-tag --yes 2>&1) || [[ "${OUTPUT}" == "release not found" ]]
        working-directory: openhab-addons/bundles/org.openhab.binding.oilfox
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Build latest Release
        run: gh release create "latest_openHAB_${{ matrix.addons-ref }}" --title "Latest Build for openHAB ${{ matrix.addons-ref }}" --latest target/*.jar
        working-directory: openhab-addons/bundles/org.openhab.binding.oilfox
        env:
           GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

